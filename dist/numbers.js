// Generated by LiveScript 1.2.0
'use strict';
var curry, even, odd, random, range, gcd, lcm, out$ = typeof exports != 'undefined' && exports || this;
curry = require('./funcs').curry;
out$.even = even = function(x){
  return x % 2 === 0;
};
out$.odd = odd = function(x){
  return x % 2 !== 0;
};
out$.random = random = function(min, max){
  if (max == null) {
    max = min;
    min = 0;
  }
  return min + Math.floor(Math.random() * (max - min + 1));
};
out$.range = range = curry(2, function(a, b, inc){
  var i$, x, results$ = [];
  inc == null && (inc = 1);
  if (arguments.length === 1) {
    b = a || 0;
    a = 0;
  }
  for (i$ = a; inc < 0 ? i$ > b : i$ < b; i$ += inc) {
    x = i$;
    results$.push(x);
  }
  return results$;
});
out$.gcd = gcd = curry$(function(x, y){
  var z;
  x = Math.abs(x);
  y = Math.abs(y);
  while (y !== 0) {
    z = x % y;
    x = y;
    y = z;
  }
  return x;
});
out$.lcm = lcm = curry$(function(x, y){
  return Math.abs(Math.floor(x / gcd(x, y) * y));
});
function curry$(f, bound){
  var context,
  _curry = function(args) {
    return f.length > 1 ? function(){
      var params = args ? args.concat() : [];
      context = bound ? context || this : this;
      return params.push.apply(params, arguments) <
          f.length && arguments.length ?
        _curry.call(context, params) : f.apply(context, params);
    } : f;
  };
  return _curry();
}